{"ast":null,"code":"import _classCallCheck from \"/home/huynh/workspace/webtest/callphone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/huynh/workspace/webtest/callphone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/huynh/workspace/webtest/callphone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/huynh/workspace/webtest/callphone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/huynh/workspace/webtest/callphone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/huynh/workspace/webtest/callphone/src/components/Runtime.js\";\nimport React, { Component } from 'react';\n\nvar caculateCallingTime = function caculateCallingTime(currentTime, startTime) {\n  var callingTime = Math.round((currentTime - startTime) / 1000); //\n\n  return callingTime;\n};\n\nvar Runtime =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Runtime, _Component);\n\n  function Runtime(props) {\n    var _this;\n\n    _classCallCheck(this, Runtime);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Runtime).call(this, props));\n    _this.state = {\n      time: new Date(),\n      callingTime: 0,\n      startTime: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(Runtime, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} ///////////////////////////////////////////\n    // componentWillReceiveProps (nextProps) //\n    // this.props: props truoc do cua component\n    // nextProps: props hien tai cua component\n    ///////////////////////////////////////////\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (this.props.isReceivingCall === false && nextProps.isReceivingCall === true) {\n        this.setState({\n          startTime: new Date()\n        }, function () {\n          _this2.startTick();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.intervalID);\n    }\n  }, {\n    key: \"startTick\",\n    value: function startTick() {\n      var _this3 = this;\n\n      this.intervalID = setInterval(function () {\n        return _this3.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var currentTime = new Date();\n      this.setState(function (_ref) {\n        var startTime = _ref.startTime;\n        return {\n          time: currentTime,\n          callingTime: caculateCallingTime(currentTime, startTime)\n        };\n      });\n      return this.state.callingTime;\n    }\n  }, {\n    key: \"stopTick\",\n    value: function stopTick() {\n      clearInterval(this.intervalID); // clear interval\n      // return { time, callingTime }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var seconds = Math.round((this.state.time - this.state.startTime) / 1000).toFixed(0).toLocaleString();\n      var minute = (seconds - seconds % 60) / 60;\n      var hour = (minute - minute % 60) / 60;\n      var secondClock = seconds - minute * 60;\n      var minuteClock = minute - hour * 60;\n\n      if (seconds > 0) {\n        return React.createElement(\"div\", {\n          className: \"run-time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row time-call\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-5 runtime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Call Time: \", ('0' + hour).slice(-2), \":\", ('0' + minuteClock).slice(-2), \":\", ('0' + secondClock).slice(-2))));\n      } else return React.createElement(\"div\", {\n        className: \"run-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row time-call\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-5 runtime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Call Time: 00:00:00\")));\n    }\n  }]);\n\n  return Runtime;\n}(Component);\n\nexport default Runtime;","map":{"version":3,"sources":["/home/huynh/workspace/webtest/callphone/src/components/Runtime.js"],"names":["React","Component","caculateCallingTime","currentTime","startTime","callingTime","Math","round","Runtime","props","state","time","Date","nextProps","isReceivingCall","setState","startTick","clearInterval","intervalID","setInterval","tick","seconds","toFixed","toLocaleString","minute","hour","secondClock","minuteClock","slice"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,WAAD,EAAcC,SAAd,EAA4B;AACtD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,WAAW,GAAGC,SAAf,IAA0B,IAArC,CAApB,CADsD,CAEtD;;AACA,SAAOC,WAAP;AACD,CAJD;;IAMMG,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADK;AAEXP,MAAAA,WAAW,EAAE,CAFF;AAGXD,MAAAA,SAAS,EAAE,IAAIQ,IAAJ;AAHA,KAAb;AAFiB;AAOlB;;;;wCAEmB,CAEnB,C,CAED;AACA;AACA;AACA;AACA;;;;8CAG0BC,S,EAAW;AAAA;;AACnC,UAAI,KAAKJ,KAAL,CAAWK,eAAX,KAA+B,KAA/B,IAAwCD,SAAS,CAACC,eAAV,KAA8B,IAA1E,EAAgF;AAC9E,aAAKC,QAAL,CAAc;AACZX,UAAAA,SAAS,EAAE,IAAIQ,IAAJ;AADC,SAAd,EAEG,YAAM;AACP,UAAA,MAAI,CAACI,SAAL;AACD,SAJD;AAKD;AACF;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb;AACD;;;gCAEW;AAAA;;AACV,WAAKA,UAAL,GAAkBC,WAAW,CAC3B;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAD2B,EAE3B,IAF2B,CAA7B;AAID;;;2BAEM;AACL,UAAMjB,WAAW,GAAG,IAAIS,IAAJ,EAApB;AACA,WAAKG,QAAL,CAAc;AAAA,YAAGX,SAAH,QAAGA,SAAH;AAAA,eAAoB;AAChCO,UAAAA,IAAI,EAAER,WAD0B;AAEhCE,UAAAA,WAAW,EAAEH,mBAAmB,CAACC,WAAD,EAAcC,SAAd;AAFA,SAApB;AAAA,OAAd;AAIA,aAAO,KAAKM,KAAL,CAAWL,WAAlB;AACD;;;+BAEU;AACTY,MAAAA,aAAa,CAAC,KAAKC,UAAN,CAAb,CADS,CAET;AACA;AACD;;;6BAEQ;AACP,UAAIG,OAAO,GAAGf,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKG,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWN,SAA9B,IAAyC,IAApD,EAA0DkB,OAA1D,CAAkE,CAAlE,EAAqEC,cAArE,EAAd;AACA,UAAIC,MAAM,GAAG,CAACH,OAAO,GAAGA,OAAO,GAAG,EAArB,IAA2B,EAAxC;AACA,UAAII,IAAI,GAAG,CAACD,MAAM,GAAGA,MAAM,GAAC,EAAjB,IAAqB,EAAhC;AACA,UAAIE,WAAW,GAAGL,OAAO,GAAGG,MAAM,GAAC,EAAnC;AACA,UAAIG,WAAW,GAAGH,MAAM,GAAGC,IAAI,GAAC,EAAhC;;AAEA,UAAGJ,OAAO,GAAC,CAAX,EAAa;AACX,eACA;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACc,CAAC,MAAII,IAAL,EAAWG,KAAX,CAAiB,CAAC,CAAlB,CADd,OACqC,CAAC,MAAID,WAAL,EAAkBC,KAAlB,CAAwB,CAAC,CAAzB,CADrC,OACmE,CAAC,MAAIF,WAAL,EAAkBE,KAAlB,CAAwB,CAAC,CAAzB,CADnE,CADF,CADF,CADA;AASD,OAVD,MAYE,OACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,CADF;AASH;;;;EAtFmB3B,S;;AAyFtB,eAAeO,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst caculateCallingTime = (currentTime, startTime) => {\n  const callingTime = Math.round((currentTime - startTime)/1000);\n  //\n  return callingTime;\n}\n\nclass Runtime extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date(),\n      callingTime: 0,\n      startTime: new Date(),\n    };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  ///////////////////////////////////////////\n  // componentWillReceiveProps (nextProps) //\n  // this.props: props truoc do cua component\n  // nextProps: props hien tai cua component\n  ///////////////////////////////////////////\n  \n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.isReceivingCall === false && nextProps.isReceivingCall === true) {\n      this.setState({\n        startTime: new Date(),\n      }, () => {\n        this.startTick();\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  startTick() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  tick() {\n    const currentTime = new Date();\n    this.setState(({ startTime }) => ({\n      time: currentTime,\n      callingTime: caculateCallingTime(currentTime, startTime),\n    }));\n    return this.state.callingTime;\n  }\n\n  stopTick() {\n    clearInterval(this.intervalID);  \n    // clear interval\n    // return { time, callingTime }\n  }\n\n  render() {\n    let seconds = Math.round((this.state.time - this.state.startTime)/1000).toFixed(0).toLocaleString();\n    let minute = (seconds - seconds % 60) / 60;\n    let hour = (minute - minute%60)/60;\n    let secondClock = seconds - minute*60;\n    let minuteClock = minute - hour*60;\n\n    if(seconds>0){\n      return (\n      <div className=\"run-time\">\n        <div className=\"row time-call\">\n          <div className=\"col-5 runtime\">\n            Call Time: {('0'+hour).slice(-2)}:{('0'+minuteClock).slice(-2)}:{('0'+secondClock).slice(-2)}\n          </div>\n        </div>\n      </div>\n    )\n    }\n    else \n      return(\n        <div className=\"run-time\">\n          <div className=\"row time-call\">\n            <div className=\"col-5 runtime\">\n              Call Time: 00:00:00\n            </div>\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default Runtime;\n"]},"metadata":{},"sourceType":"module"}